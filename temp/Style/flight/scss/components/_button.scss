//
// Button Variables
//

// padding for buttons.
$button-med:              11px !default;
$button-tny:              4px !default;
$button-sml:              9px !default;
$button-lrg:              16px !default;

// control the display property.
$button-display:          inline-block !default;
$button-margin-bottom:    20px !default;

// control button text styles.
$button-font-family:      inherit !default;
$button-font-color:       #fff !default;
$button-font-color-alt:   #333 !default;
$button-font-med:         14px !default;
$button-font-tny:         12px !default;
$button-font-sml:         13px !default;
$button-font-lrg:         16px !default;
$button-font-weight:      normal !default;
$button-font-align:       center !default;

// control various hover effects.
$button-function-factor:  10% !default;

// control button border styles.
$button-border-width:     1px !default;
$button-border-style:     solid !default;
$button-border-color:     darken($primary-color, $button-function-factor) !default;

// set the default radius used throughout the core.
$button-radius:           3px !default;
$button-round:            $global-rounded !default;

// set default opacity for disabled buttons.
$button-disabled-opacity: 0.6 !default;


//
// Button Mixins
//

@mixin button-base($style:true, $display:$button-display) {
  @if $style {
    border-style: $button-border-style;
    border-width: $button-border-width;
    cursor: pointer;
    font-family: $button-font-family;
    font-weight: $button-font-weight;
    line-height: 1;
    margin: 0;
    position: relative;
    text-decoration: none;
    text-align: $button-font-align;
  }
  @if $display { display: $display; }
}

@mixin button-size($padding:$button-med, $full-width:false, $is-input:false) {

  @if $padding {
    padding-top: $padding;
    padding-right: $padding * 2;
    padding-bottom: $padding;
    padding-left: $padding * 2;

    // We control the font-size based on mixin input.
    @if      $padding == $button-med { font-size: $button-font-med; font-family: $yahei; }
    @else if $padding == $button-tny { font-size: $button-font-tny; font-family: $arial; }
    @else if $padding == $button-sml { font-size: $button-font-sml; font-family: $arial; }
    @else if $padding == $button-lrg { font-size: $button-font-lrg; font-family: $yahei; }
    @else                     { font-size: $padding - 2px; }
  }

  // We can set $full-width:true to remove side padding extend width.
  @if $full-width {
    padding-top: $padding;
    padding-right: 0px;
    padding-bottom: $padding + 1px;
    padding-left: 0px;
    width: 100%;
  }

  // <input>'s and <button>'s take on strange padding. We added this to help fix that.
  @if $is-input == $button-lrg {
    padding-top: $is-input + 0.5px;
    padding-bottom: $is-input + 0.5px;
  }
  @else if $is-input {
    padding-top: $is-input + 1px;
    padding-bottom: $is-input;
  }
}

@mixin button-style($bg:$primary-color, $radius:true, $disabled:false) {

  // We control which background styles are used,
  // these can be removed by setting $bg:false
  @include box-shadow(0 1px 1px #bbc0c4);
  @if $bg == $secondary-color {
    background-color: $bg;
    border-color: #d1d1d1;
    color: #333;
    &:hover,
    &:focus{ 
    	background-color: $primary-color;
      border-color: $primary-color;
		  color: #fff;
		  text-decoration: none;
      @include box-shadow(0 1px 2px #c6c6c6);
    }
  } @else if $bg == $warning-color {
    background-color: transparent;
    border-color: $warning-color;
    color: $warning-color;
    &:hover,
    &:focus { 
      background-color: lighten($warning-color, $button-function-factor);
      color: #fff;
      text-decoration: none;
      @include box-shadow(0 1px 2px #c6c6c6);
    }
  } @else if $bg {
    // This find the lightness percentage of the background color.
    $bg-lightness: lightness($bg);

    background-color: $bg;
    border-color: darken($bg, $button-function-factor);
    &:hover,
    &:focus { 
    	background-color: darken($bg, $button-function-factor);
		  text-decoration: none;
    }

    // We control the text color for you based on the background color.
    @if $bg-lightness > 70% {
      color: $button-font-color-alt;
      &:hover,
      &:focus { color: $button-font-color-alt; }
    }
    @else {
      color: $button-font-color;
      &:hover,
      &:focus { color: $button-font-color; }
    }
  }

  // We can set $disabled:true to create a disabled transparent button.
  @if $disabled {
    cursor: default;
    opacity: $button-disabled-opacity;
    -webkit-box-shadow: none;
    box-shadow: none;
    &:hover,
    &:focus { background-color: $bg; }
  }

  // We can control how much button radius us used.
  @if $radius == true { @include radius($button-radius); }
  @else if $radius { @include radius($radius); }

}

// We use this to quickly create buttons with a single mixin. As @jaredhardy puts it, "the kitchen sink mixin"
@mixin button($padding:$button-med, $bg:$primary-color, $radius:false, $full-width:false, $disabled:false, $is-input:false, $is-prefix:false) {
  @include button-base;
  @include button-size($padding, $full-width, $is-input);
  @include button-style($bg, $radius, $disabled);
}

.button {
  @include button-base;
  @include button-size;
  @include button-style;

  &.secondary { @include button-style($bg:$secondary-color); }
  &.success   { @include button-style($bg:$success-color); }
  &.alert     { @include button-style($bg:$alert-color); }
  &.warning     { @include button-style($bg:$warning-color); }
  &.submit     { @include button-style($bg:$submit-color); }

  &.large  { @include button-size($padding:$button-lrg); }
  &.small  { @include button-size($padding:$button-sml); }
  &.tiny   { @include button-size($padding:$button-tny); vertical-align: middle; }
  &.expand { @include button-size(false,$full-width:true); }

  &.left_align  { text-align: left; text-indent: 12px; }
  &.right_align { text-align: right; padding-right: 12px; }

  // &.disabled, &[disabled] { @include button-style($bg:$primary-color, $disabled:true);
  //   &.secondary { @include button-style($bg:$secondary-color, $disabled:true); }
  //   &.success { @include button-style($bg:$success-color, $disabled:true); }
  //   &.alert { @include button-style($bg:$alert-color, $disabled:true); }
  // }
}
.submit{
  text-shadow:1px 1px 0 #cf7000;
  color:#fff;
  font-family:$yahei;
  cursor:pointer;
  *filter:chroma(color=#000000);
}
.outline {
  background-color: transparent;
}